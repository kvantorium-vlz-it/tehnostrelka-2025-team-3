// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  posts Route[]
  comments Comment[]
  rating Rating[]
  visited Completed[]
}

model Route {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
  publicly  Boolean @default(false)
  routePoints RoutePoint[]
  comments Comment[]
  routeImages RouteImage[]
  rating Rating[]
  completed Completed[]
}

model Comment {
  id        Int     @id @default(autoincrement())
  content   String
  authorId  Int
  routeId   Int 
  author    User    @relation(fields: [authorId], references: [id])
  route     Route   @relation(fields: [routeId], references: [id])
}

model RoutePoint {
  id      Int     @id @default(autoincrement())
  title   String  
  routeId Int
  route   Route   @relation(fields: [routeId], references: [id])
  routePointImages RoutePointImage[]
}

model Image {
  id      Int     @id @default(autoincrement())
  src     String
  routePointImages RoutePointImage[]
  routeImages RouteImage[]
}

model RouteImage {
  id      Int     @id @default(autoincrement())
  routeId Int
  route Route @relation(fields: [routeId], references: [id])
  imageId Int
  image Image @relation(fields: [imageId], references: [id])
}

model RoutePointImage {
  id      Int     @id @default(autoincrement())
  routePointId Int
  routePoint RoutePoint @relation(fields: [routePointId], references: [id])
  imageId Int
  image Image @relation(fields: [imageId], references: [id])
}

model Rating {
  id Int  @id @default(autoincrement())
  rating Int
  author User @relation(fields: [authorId], references: [id])
  authorId Int
  route Route @relation(fields: [routeId], references: [id])
  routeId Int
}

model Completed {
  id  Int @id @default(autoincrement())
  visited Boolean
  author User @relation(fields: [authorId], references: [id])
  authorId Int
  routeId Int
  route Route @relation(fields: [routeId], references: [id])
}